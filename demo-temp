package com.company;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;



public class Main {
    public static void main(String[] args) throws ExceptionNumbers {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        Distribution distribution = new Distribution();
        distribution.enterNumbers(input);
    }
}

class Distribution{
    ArrayList<String> list = new ArrayList<>();
    public void enterNumbers(String input) throws ExceptionNumbers{
        String[] numbers = {"1","2","3","4","5","6","7","8","9","10"};
        String[] roman = {"I","II","III","IV","V","VI","VII","VIII","IX","X"};
        StringBuffer StringBuffer = new StringBuffer();
        for (int i = 0; i < input.length(); i++) {
                if (input.charAt(i) != '+' && input.charAt(i) != '-' && input.charAt(i) != '*' && input.charAt(i) != '/') {
                    StringBuffer.append(input.charAt(i));
                }
                if(input.charAt(i) == '+' || input.charAt(i) == '-' || input.charAt(i) == '*' || input.charAt(i) == '/') {
                    String transferChar = Character.toString(input.charAt(i));
                    list.add(StringBuffer.toString());
                    list.add(transferChar);
                    StringBuffer.setLength(0);
                }
        }
        list.add(StringBuffer.toString());
        for (int b = 0; b < 10; b++) {
            if(input.contains(numbers[b])){
                normalNumber();
                break;
            }
            if(input.contains(roman[b])){
                arifmeticNumbers();
                break;
            }
        }
    }
    public void normalNumber () throws ExceptionNumbers{
            ArrayList<String> inMethodList = new ArrayList<>();
            Number call = new Number();
            String[] numbers = {"1","2","3","4","5","6","7","8","9","10"};
            String[] symbols = {"+","-","*","/"};
            try {
                for (int i = 0; i < numbers.length; i++) {
                    if (list.get(0).equals(numbers[i])) {
                        inMethodList.add(list.get(0));
                    }
                }
                for (int s = 0; s < symbols.length; s++) {
                    if(list.get(1).equals(symbols[s])){
                        inMethodList.add(list.get(1));
                    }
                }
                for (int b = 0; b < numbers.length; b++) {
                    if(list.get(2).equals(numbers[b])){
                        inMethodList.add(list.get(2));
                    }
                }
                call.normalNumbers(inMethodList.get(0), inMethodList.get(1), inMethodList.get(2));
            }catch (Exception e){
                throw new ExceptionNumbers("Please, corrrect your numbers");
            }
    }
    public void arifmeticNumbers() throws ExceptionNumbers{
            ArrayList<String> inMethodList = new ArrayList<>();
            Arifmetic call = new Arifmetic();
            String[] roman = {"I","II","III","IV","V","VI","VII","VIII","IX","X"};
            String[] symbols = {"+","-","*","/"};
            for (int s = 0; s < roman.length; s++) {
                if(list.get(0).equals(roman[s])){
                    inMethodList.add(list.get(0));
                }
            }
            for (int d = 0; d < symbols.length; d++) {
                if(list.get(1).equals(symbols[d])){
                    inMethodList.add(list.get(1));
                }
            }
            for (int w = 0; w < roman.length; w++) {
                if(list.get(2).equals(roman[w])){
                    inMethodList.add(list.get(2));
                }
            }
            try {
                call.arifmetica(inMethodList.get(0), inMethodList.get(1), inMethodList.get(2));
            }catch (Exception e){
                throw new ExceptionNumbers("Please, correct your nubmers");
            }
    }
}

class Number {
    public void normalNumbers(String firstInput, String operator, String secondInput){
        int one = Integer.parseInt(firstInput);
        int two = Integer.parseInt(secondInput);
        if(operator.contains("+")){
            System.out.println(one + two);
        }
        if(operator.contains("-")){
            System.err.println(one - two);
        }
        if(operator.contains("/")){
            System.out.println(one / two);
        }
        if(operator.contains("*")){
            System.out.println(one * two);
        }
    }
}

class Arifmetic {
    public void arifmetica(String firstInput, String operator, String secondInput) {
        if (firstInput.equals("I")) {
            firstInput = "1";
        }
        if (secondInput.equals("I")) {
            secondInput = "1";
        }
        if (firstInput.equals("II")) {
            firstInput = "2";
        }
        if (secondInput.equals("II")) {
            secondInput = "2";
        }
        if (firstInput.equals("III")) {
            firstInput = "3";
        }
        if (secondInput.equals("III")) {
            secondInput = "3";
        }
        if (firstInput.equals("IV")) {
            firstInput = "4";
        }
        if (secondInput.equals("IV")) {
            secondInput = "4";
        }
        if (firstInput.equals("V")) {
            firstInput = "5";
        }
        if (secondInput.equals("V")) {
            secondInput = "5";
        }
        if (firstInput.equals("VI")) {
            firstInput = "6";
        }
        if (secondInput.equals("VI")) {
            secondInput = "6";
        }
        if (firstInput.equals("VII")) {
            firstInput = "7";
        }
        if (secondInput.equals("VII")) {
            secondInput = "7";
        }
        if (firstInput.equals("VIII")) {
            firstInput = "8";
        }
        if (secondInput.equals("VIII")) {
            secondInput = "8";
        }
        if (firstInput.equals("XI")) {
            firstInput = "9";
        }
        if (secondInput.equals("XI")) {
            secondInput = "9";
        }
        if (firstInput.equals("X")) {
            firstInput = "10";
        }
        if (secondInput.equals("X")) {
            secondInput = "10";
        }
        int transferFirst = Integer.parseInt(firstInput);
        int transferSecond = Integer.parseInt(secondInput);
        int[] arabic = {500, 100, 50, 40, 10, 9, 5, 4, 1};
        String[] roman = {"D", "C", "L", "XL", "X", "IX", "V", "IV", "I"};
        StringBuilder romanNumerals = new StringBuilder();
        int relust = 0;
        if (operator.contains("+")) {
            relust = transferFirst + transferSecond;
        }
        if (operator.contains("-")) {
            relust = transferFirst - transferSecond;
        }
        if (operator.contains("/")) {
            relust = transferFirst / transferSecond;
        }
        if (operator.contains("*")) {
            relust = transferFirst * transferSecond;
        }
        for (int i = 0; i < arabic.length; i++) {
            while (relust >= arabic[i]) {
                romanNumerals.append(roman[i]);
                relust -= arabic[i];
            }
        }
        System.out.println(romanNumerals.toString());
    }
}
class ExceptionNumbers extends Exception{
    public ExceptionNumbers(String message) {
        super(message);
    }
}
